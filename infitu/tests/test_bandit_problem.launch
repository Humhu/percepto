<launch>
    <node pkg="infitu" type="SynchronousPolicyNode.py" name="bandit" output="screen">
        <rosparam>
            critique_topic: test_problem/get_critique

            action_dim: 2
            input_stream: next_bandit_state
            policy_rate: 2.0
            learn_rate: 0.1
            
            policy:
                type: linear
            input_processing:
                enable_homogeneous: true
                <!--normalization:
                    mode: moments
                    min_samples: 30
                    keep_updating: False
                    num_sds: 3.0
                augmentation:
                    type: polynomial
                    max_order: 1-->
            output_processing:
                type: box
                lims: 1
            learning:
                gradient_estimation:
                    type: episodic_policy_gradient
                    traj_mode: reinforce
                    batch_size: 30
                    buffer_size: 100
                    use_natural_gradient: true
                    use_baseline: true
                optimizer:
                    type: gradient_descent
                    step_size: 1E-1
                    max_linf_norm: 0.1
                    max_iters: 10
        </rosparam>
    </node>

    <node pkg="infitu" type="test_bandit_problem.py" name="test_problem" output="screen"
    launch-prefix='xterm -hold -e'>
        <rosparam>
            dim: 2
            err_cutoff: 0.5
        </rosparam>
    </node>
</launch>